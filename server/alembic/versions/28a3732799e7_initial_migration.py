"""Initial migration

Revision ID: 28a3732799e7
Revises: 
Create Date: 2025-05-09 20:32:05.295054

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '28a3732799e7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('commit_parents')
    op.add_column('branches', sa.Column('branch_name', sa.String(length=100), nullable=False))
    op.add_column('branches', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('branches', sa.Column('last_commit_hash', sa.String(length=40), nullable=True))
    op.drop_constraint('branches_ibfk_1', 'branches', type_='foreignkey')
    op.create_foreign_key(None, 'branches', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'branches', 'repositories', ['repository_id'], ['id'])
    op.drop_column('branches', 'commit_hash')
    op.drop_column('branches', 'name')
    op.alter_column('commit_files', 'content',
               existing_type=mysql.TEXT(),
               nullable=True)
    op.drop_constraint('commit_files_ibfk_1', 'commit_files', type_='foreignkey')
    op.drop_constraint('commit_files_ibfk_2', 'commit_files', type_='foreignkey')
    op.create_foreign_key(None, 'commit_files', 'commits', ['commit_id'], ['id'])
    op.create_foreign_key(None, 'commit_files', 'files', ['file_id'], ['id'])
    op.add_column('commits', sa.Column('parent_hash', sa.String(length=40), nullable=True))
    op.alter_column('commits', 'message',
               existing_type=mysql.TEXT(),
               nullable=False)
    op.alter_column('commits', 'user_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.drop_constraint('commits_ibfk_2', 'commits', type_='foreignkey')
    op.drop_constraint('commits_ibfk_1', 'commits', type_='foreignkey')
    op.create_foreign_key(None, 'commits', 'repositories', ['repository_id'], ['id'])
    op.create_foreign_key(None, 'commits', 'users', ['user_id'], ['id'])
    op.add_column('files', sa.Column('filename', sa.String(length=255), nullable=False))
    op.add_column('files', sa.Column('repo_id', sa.Integer(), nullable=False))
    op.drop_index('repository_id', table_name='files')
    op.drop_constraint('files_ibfk_1', 'files', type_='foreignkey')
    op.create_foreign_key(None, 'files', 'repositories', ['repo_id'], ['id'])
    op.drop_column('files', 'file_path')
    op.drop_column('files', 'repository_id')
    op.add_column('repositories', sa.Column('last_updated', sa.DateTime(), nullable=True))
    op.alter_column('repositories', 'name',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.drop_index('user_id', table_name='repositories')
    op.drop_constraint('repositories_ibfk_1', 'repositories', type_='foreignkey')
    op.create_foreign_key(None, 'repositories', 'users', ['user_id'], ['id'])
    op.add_column('staging_area', sa.Column('repo_id', sa.Integer(), nullable=False))
    op.add_column('staging_area', sa.Column('file_id', sa.Integer(), nullable=False))
    op.add_column('staging_area', sa.Column('status', sa.String(length=20), nullable=True))
    op.add_column('staging_area', sa.Column('timestamp', sa.DateTime(), nullable=True))
    op.drop_constraint('staging_area_ibfk_2', 'staging_area', type_='foreignkey')
    op.drop_constraint('staging_area_ibfk_1', 'staging_area', type_='foreignkey')
    op.create_foreign_key(None, 'staging_area', 'repositories', ['repo_id'], ['id'])
    op.create_foreign_key(None, 'staging_area', 'files', ['file_id'], ['id'])
    op.drop_column('staging_area', 'staged_at')
    op.drop_column('staging_area', 'user_id')
    op.drop_column('staging_area', 'file_path')
    op.drop_column('staging_area', 'repository_id')
    op.add_column('working_tree', sa.Column('repo_id', sa.Integer(), nullable=False))
    op.add_column('working_tree', sa.Column('file_id', sa.Integer(), nullable=False))
    op.add_column('working_tree', sa.Column('timestamp', sa.DateTime(), nullable=True))
    op.alter_column('working_tree', 'status',
               existing_type=mysql.VARCHAR(length=32),
               type_=sa.String(length=20),
               nullable=True)
    op.drop_constraint('working_tree_ibfk_1', 'working_tree', type_='foreignkey')
    op.drop_constraint('working_tree_ibfk_2', 'working_tree', type_='foreignkey')
    op.create_foreign_key(None, 'working_tree', 'files', ['file_id'], ['id'])
    op.create_foreign_key(None, 'working_tree', 'repositories', ['repo_id'], ['id'])
    op.drop_column('working_tree', 'file_path')
    op.drop_column('working_tree', 'user_id')
    op.drop_column('working_tree', 'last_modified')
    op.drop_column('working_tree', 'repository_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('working_tree', sa.Column('repository_id', mysql.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('working_tree', sa.Column('last_modified', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
    op.add_column('working_tree', sa.Column('user_id', mysql.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('working_tree', sa.Column('file_path', mysql.VARCHAR(length=512), nullable=False))
    op.drop_constraint(None, 'working_tree', type_='foreignkey')
    op.drop_constraint(None, 'working_tree', type_='foreignkey')
    op.create_foreign_key('working_tree_ibfk_2', 'working_tree', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('working_tree_ibfk_1', 'working_tree', 'repositories', ['repository_id'], ['id'], ondelete='CASCADE')
    op.alter_column('working_tree', 'status',
               existing_type=sa.String(length=20),
               type_=mysql.VARCHAR(length=32),
               nullable=False)
    op.drop_column('working_tree', 'timestamp')
    op.drop_column('working_tree', 'file_id')
    op.drop_column('working_tree', 'repo_id')
    op.add_column('staging_area', sa.Column('repository_id', mysql.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('staging_area', sa.Column('file_path', mysql.VARCHAR(length=512), nullable=False))
    op.add_column('staging_area', sa.Column('user_id', mysql.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('staging_area', sa.Column('staged_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
    op.drop_constraint(None, 'staging_area', type_='foreignkey')
    op.drop_constraint(None, 'staging_area', type_='foreignkey')
    op.create_foreign_key('staging_area_ibfk_1', 'staging_area', 'repositories', ['repository_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('staging_area_ibfk_2', 'staging_area', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('staging_area', 'timestamp')
    op.drop_column('staging_area', 'status')
    op.drop_column('staging_area', 'file_id')
    op.drop_column('staging_area', 'repo_id')
    op.drop_constraint(None, 'repositories', type_='foreignkey')
    op.create_foreign_key('repositories_ibfk_1', 'repositories', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_index('user_id', 'repositories', ['user_id', 'name'], unique=True)
    op.alter_column('repositories', 'name',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
    op.drop_column('repositories', 'last_updated')
    op.add_column('files', sa.Column('repository_id', mysql.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('files', sa.Column('file_path', mysql.VARCHAR(length=512), nullable=False))
    op.drop_constraint(None, 'files', type_='foreignkey')
    op.create_foreign_key('files_ibfk_1', 'files', 'repositories', ['repository_id'], ['id'], ondelete='CASCADE')
    op.create_index('repository_id', 'files', ['repository_id', 'file_path'], unique=True)
    op.drop_column('files', 'repo_id')
    op.drop_column('files', 'filename')
    op.drop_constraint(None, 'commits', type_='foreignkey')
    op.drop_constraint(None, 'commits', type_='foreignkey')
    op.create_foreign_key('commits_ibfk_1', 'commits', 'users', ['user_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key('commits_ibfk_2', 'commits', 'repositories', ['repository_id'], ['id'], ondelete='CASCADE')
    op.alter_column('commits', 'user_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.alter_column('commits', 'message',
               existing_type=mysql.TEXT(),
               nullable=True)
    op.drop_column('commits', 'parent_hash')
    op.drop_constraint(None, 'commit_files', type_='foreignkey')
    op.drop_constraint(None, 'commit_files', type_='foreignkey')
    op.create_foreign_key('commit_files_ibfk_2', 'commit_files', 'files', ['file_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('commit_files_ibfk_1', 'commit_files', 'commits', ['commit_id'], ['id'], ondelete='CASCADE')
    op.alter_column('commit_files', 'content',
               existing_type=mysql.TEXT(),
               nullable=False)
    op.add_column('branches', sa.Column('name', mysql.VARCHAR(length=100), nullable=False))
    op.add_column('branches', sa.Column('commit_hash', mysql.VARCHAR(length=40), nullable=False))
    op.drop_constraint(None, 'branches', type_='foreignkey')
    op.drop_constraint(None, 'branches', type_='foreignkey')
    op.create_foreign_key('branches_ibfk_1', 'branches', 'repositories', ['repository_id'], ['id'], ondelete='CASCADE')
    op.drop_column('branches', 'last_commit_hash')
    op.drop_column('branches', 'user_id')
    op.drop_column('branches', 'branch_name')
    op.create_table('commit_parents',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('commit_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('parent_commit_hash', mysql.VARCHAR(length=40), nullable=False),
    sa.ForeignKeyConstraint(['commit_id'], ['commits.id'], name='commit_parents_ibfk_1', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    # ### end Alembic commands ###
